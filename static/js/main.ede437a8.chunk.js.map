{"version":3,"sources":["components/TaskOne/Homework.module.css","components/common/SuperButton/SuperButton.tsx","components/common/SuperInput/SuperInput.tsx","components/common/SuperCheckBox/SuperCheckBox.tsx","components/TodoList/TodoList.tsx","components/common/Common.tsx","components/Navbar/Navbar.tsx","components/TaskOne/Homework.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Navbar/Navbar.module.css","components/TodoList/TodoList.module.css","components/common/SuperCheckBox/SuperCheckBox.module.css"],"names":["module","exports","SuperButton","props","style","minWidth","height","borderRadius","backgroundColor","marginLeft","onClick","name","SuperInput","type","padding","value","onChange","onKeyPress","SuperCheckBox","className","s","label","checkbox","fake","text","array","id","v1","TodoList","useState","taskName","setTaskName","alertTask","alert","newName","push","pushArrayNames","length","t","input","e","currentTarget","key","tasks","map","removeTasks","allNoMatterImportant","important","changeFilter","noMatter","all","Common","NavBar","active","setActive","n","toggle","wrapper","item","to","activeClassName","Homework","d","dialogs","src","message","time","App","setTasks","taskId","filter","setFilter","newFilterValue","tasksTodoList","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ede437a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Homework_dialogs__2jG0T\",\"name\":\"Homework_name__3AZun\",\"message\":\"Homework_message__2zcDd\",\"time\":\"Homework_time__m3t7Z\"};","import React from \"react\";\r\n\r\n// type PropsType = {\r\n//     name: string\r\n//     onClick: ()=> void\r\n// }\r\n\r\nexport function SuperButton(props: any) {\r\n\r\n    const buttonStyle = {\r\n        minWidth: \"40px\",\r\n        height: \"30px\",\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"deepskyblue\",\r\n        marginLeft: \"10px\"\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <button style={buttonStyle} onClick={props.onClick}>{props.name}</button>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\n\r\nexport function SuperInput(props: any) {\r\n\r\n    const inputStyle = {\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"LightCyan\",\r\n        padding: \"6px 6px 6px 19px\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" style={inputStyle}\r\n                   value={props.value}\r\n                   onChange={props.onChange}\r\n                   onKeyPress={props.onKeyPress}/>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport s from'./SuperCheckBox.module.css'\r\n\r\nexport function SuperCheckBox() {\r\n    return (\r\n        <label className={s.label}>\r\n            <input type=\"checkbox\" className={s.checkbox}/>\r\n            <span className={s.fake}></span>\r\n            <span className={s.text}></span>\r\n        </label>\r\n    )\r\n\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {TaskType, ValuesType} from \"../../App\";\r\nimport {v1} from \"uuid\";\r\nimport {SuperButton} from \"../common/SuperButton/SuperButton\";\r\nimport {SuperInput} from \"../common/SuperInput/SuperInput\";\r\nimport t from './TodoList.module.css'\r\nimport {SuperCheckBox} from \"../common/SuperCheckBox/SuperCheckBox\";\r\n\r\ntype PropsType = {\r\n    tasks: Array<TaskType>,\r\n    removeTasks: (taskId: string) => void,\r\n    changeFilter: (newFilterValue: ValuesType) => void\r\n}\r\n\r\nlet array = [{id: v1(), name: \"Andrew\"},\r\n    {id: v1(), name: \"Sveta\"}]\r\n\r\nexport function TodoList(props: PropsType) {\r\n\r\n    let [taskName, setTaskName] = useState<any>(\"\");\r\n    let alertTask = () => {\r\n        taskName === \"\" ? alert(\"Enter your name\") : alert(\"Hello \" + taskName);\r\n        pushArrayNames(taskName)\r\n        setTaskName(array.length)\r\n    }\r\n\r\n    function pushArrayNames(taskName: string) {\r\n        let newName = {id: v1(), name: taskName};\r\n        array.push(newName)\r\n\r\n    }\r\n\r\n    function onTaskNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        setTaskName(e.currentTarget.value)\r\n    }\r\n\r\n    function onAlertTaskKeyPressed(e: KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === \"Enter\") {\r\n            alertTask()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>What to do</h3>\r\n            <div className={t.input}>\r\n                <SuperInput value={taskName}\r\n                            onChange={onTaskNameChanged}\r\n                            onKeyPress={onAlertTaskKeyPressed}/>\r\n                <div>\r\n                    <SuperButton onClick={alertTask} name={\"+\"}/>\r\n                </div>\r\n            </div>\r\n\r\n            <ul>\r\n                {props.tasks.map((t) => {\r\n                    return (\r\n                        <li key={t.id}>\r\n                            <SuperCheckBox/>\r\n                            <span>{t.name}</span>\r\n                            <SuperButton onClick={() => props.removeTasks(t.id)} name={\"delete\"}/>\r\n                        </li>\r\n                    )\r\n                })}\r\n\r\n            </ul>\r\n            <div className={t.allNoMatterImportant}>\r\n                <div className={t.important}>\r\n                    <SuperButton name={\"Important\"} onClick={() => {\r\n                        props.changeFilter(\"important\")\r\n                    }}/>\r\n                </div>\r\n                <div className={t.noMatter}>\r\n                    <SuperButton name={\"No Matter\"} onClick={() => {\r\n                        props.changeFilter(\"noMatter\")\r\n                    }}/>\r\n                </div>\r\n                <div className={t.all}>\r\n                    <SuperButton name={\"All\"} onClick={() => {\r\n                        props.changeFilter(\"all\")\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {SuperInput} from \"./SuperInput/SuperInput\";\r\nimport {SuperCheckBox} from \"./SuperCheckBox/SuperCheckBox\";\r\nimport {SuperButton} from \"./SuperButton/SuperButton\";\r\n\r\nexport function Common() {\r\n    return (\r\n    <div>\r\n        <SuperInput/>\r\n        <SuperCheckBox/>\r\n        <SuperButton/>\r\n    </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport n from './Navbar.module.css'\r\n\r\nconst NavBar = () => {\r\n\r\n    const [active, setActive] = useState(false)\r\n    let onClick = () => {\r\n        setActive(!active)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={n.toggle} onClick={onClick}>Всплывашка</div>\r\n            {\r\n                !active\r\n                    ? <div></div>\r\n                    : <nav className={n.wrapper}>\r\n                        <div className={n.item}>\r\n                            <NavLink to='/PreJunior' activeClassName={n.active}>PreJunior</NavLink>\r\n                        </div>\r\n                        <div className={n.item}>\r\n                            <NavLink to='/Junior' activeClassName={n.active}>Junior</NavLink>\r\n                        </div>\r\n                        <div className={n.item}>\r\n                            <NavLink to='/Junior+' activeClassName={n.active}>Junior+</NavLink>\r\n                        </div>\r\n                    </nav>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport d from './Homework.module.css'\r\n\r\ntype MessageNameType = {\r\n    message: string;\r\n    name: string;\r\n}\r\n\r\nconst Homework: React.FC<MessageNameType> = (props) => {\r\n    return (\r\n        <div className={d.dialogs}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS7WTP-tHQOZbAbB0ZmTDrs7XX3qjexEsykECZ5K5iYrBxndlD3&usqp=CAU'/>\r\n            <div className={d.name}>{props.name}</div>\r\n            <div className={d.message}>{props.message}</div>\r\n            <div className={d.time}>9:00 PM</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homework;","import React, {useState} from 'react';\nimport './App.css';\nimport {TodoList} from \"./components/TodoList/TodoList\";\nimport {v1} from \"uuid\";\nimport {Counter} from \"./components/Counter/Counter\";\nimport {Common} from \"./components/common/Common\";\nimport {HashRouter, Route} from 'react-router-dom';\nimport NavBar from \"./components/Navbar/Navbar\";\nimport Homework from \"./components/TaskOne/Homework\";\n\nexport type TaskType = {\n    id: string\n    name: string\n    value: boolean\n}\n\nexport type ValuesType = \"important\" | \"noMatter\" | \"all\";\n\nfunction App() {\n\n    let [tasks, setTasks] = useState<Array<TaskType>>([\n        {id: v1(), name: \"Family\", value: true},\n        {id: v1(), name: \"React\", value: true},\n        {id: v1(), name: \"Job\", value: false},\n        {id: v1(), name: \"Travels\", value: true},\n        {id: v1(), name: \"Games\", value: false}\n    ])\n\n    function removeTasks(taskId: string) {\n        setTasks(tasks.filter((t) => t.id !== taskId))\n    }\n\n\n    let [filter, setFilter] = useState<ValuesType>(\"all\")\n\n    function changeFilter(newFilterValue: ValuesType) {\n        setFilter(newFilterValue)\n    }\n\n    let tasksTodoList = tasks;\n    if (filter === \"important\") {\n        tasksTodoList = tasks.filter(t => t.value)\n    }\n    if (filter === \"noMatter\") {\n        tasksTodoList = tasks.filter(t => !t.value)\n    }\n\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <NavBar/>\n                <Route path='/PreJunior' render={() =>\n                    <Homework name='Serg' message='How are you?'/>\n                }/>\n                <Route path='/PreJunior' render={() =>\n                    <TodoList tasks={tasksTodoList}\n                              removeTasks={removeTasks}\n                              changeFilter={changeFilter}/>\n                }/>\n                <Route path='/PreJunior' render={() =>\n                    <Common/>\n                }/>\n                <Route path='/Junior' render={() => <div>Junior</div>}/>\n                <Route path='/Junior+' render={() => <div>Junior+</div>}/>\n                {/*<Counter/>*/}\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle\":\"Navbar_toggle__371bj\",\"wrapper\":\"Navbar_wrapper__-L-sg\",\"item\":\"Navbar_item__3fRbc\",\"active\":\"Navbar_active__1loaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TodoList_input__3N5Sm\",\"allNoMatterImportant\":\"TodoList_allNoMatterImportant__TR7gx\",\"important\":\"TodoList_important__3arSD\",\"noMatter\":\"TodoList_noMatter__fBmYT\",\"all\":\"TodoList_all__mkJno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckBox_label__2m4Nt\",\"checkbox\":\"SuperCheckBox_checkbox__3D9rh\",\"fake\":\"SuperCheckBox_fake__34zAb\",\"text\":\"SuperCheckBox_text__23lgx\"};"],"sourceRoot":""}